spring:
  datasource:
#    docker run --name identity-service --network devteria-network -p 8080:8080 -e DBMS_CONNECTION=jdbc:mysql://mysql:3306/identity_service identity-service:0.9.0
    url: jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/classroom_db
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update

  data:
    redis:
      host: localhost
      port: 6379
      timeout: 60000

  kafka:
    bootstrap-servers: localhost:9094
#    bootstrap-servers: localhost:9092

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  jackson:
    serialization:
      INDENT_OUTPUT: true

outbound:
  identity:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    redirect-uri: "http://localhost:4200/authenticate"

notification:
  email:
    brevo-url: https://api.brevo.com
    brevo-apikey: ${BREVO_API_KEY}

jwt:
  secret-key: ${JWT-SECRET-KEY}
  expiration: 1 # 1 ngày
  refresh-expiration: 7 # 7 ngày

openapi:
  service:
    api-docs: api-service
    server: http://localhost:8080
    title: API Service
    version: 1.0.0

management:
  endpoint:
    health:
      show-details: always   # luôn hiển thị chi tiết
      show-components: always # hiển thị cả từng component con
  endpoints:
    web:
      exposure:
        include: '*'
#        include: health,info,metrics,prometheus